<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.1.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<repositories>
		<repository>
			<id>mvnrepository</id>
			<url>https://mvnrepository.com</url>
		</repository>
	</repositories>

	<groupId>com.knowmad</groupId>
	<artifactId>w2m</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>w2m</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>17</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>

		<asciidoctor-maven-plugin.version>2.2.4</asciidoctor-maven-plugin.version>
		<flatten-maven-plugin.version>1.3.0</flatten-maven-plugin.version>
		<gitflow-maven-plugin.version>1.20.0</gitflow-maven-plugin.version>
		<git-commit-id-plugin.version>4.9.10</git-commit-id-plugin.version>
		<gmavenplus-plugin.version>3.0.2</gmavenplus-plugin.version>
		<jacoco-maven-plugin.version>0.8.10</jacoco-maven-plugin.version>
		<maven-checkstyle-plugin.version>3.3.0</maven-checkstyle-plugin.version>
		<maven-clean-plugin.version>3.3.1</maven-clean-plugin.version>
		<maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
		<maven-core.version>3.9.4</maven-core.version>
		<maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
		<maven-surefire-plugin.version>3.1.2</maven-surefire-plugin.version>
		<openapi-generator-maven-plugin.version>7.0.1</openapi-generator-maven-plugin.version>
		<properties-maven-plugin.version>1.2.0</properties-maven-plugin.version>

		<asm.version>9.6</asm.version>
		<embedded-database-spring-test.version>2.3.0</embedded-database-spring-test.version>
		<embedded-postgres.version>2.0.4</embedded-postgres.version>
		<groovy-all.version>4.0.15</groovy-all.version>
		<jackson.version>2.15.2</jackson.version>
		<jakarta.persistence-api.version>3.1.0</jakarta.persistence-api.version>
		<jakarta.validation-api.version>3.0.2</jakarta.validation-api.version>
		<junit.version>4.13.2</junit.version>
		<lombok.version>1.18.30</lombok.version>
		<mapstruct.version>1.5.5.Final</mapstruct.version>
		<podam.version>8.0.0.RELEASE</podam.version>
		<postgresql.version>42.6.0</postgresql.version>
		<puppycrawl.tools.version>10.12.4</puppycrawl.tools.version>
		<snakeyaml.version>2.2</snakeyaml.version>
		<spock.version>2.3-groovy-4.0</spock.version>
		<spring-boot.version>3.1.4</spring-boot.version>
		<springdoc-openapi-starter-webmvc-ui.version>2.3.0</springdoc-openapi-starter-webmvc-ui.version>
		<jackson-databind-nullable.version>0.2.6</jackson-databind-nullable.version>
		<liquibase.version>4.23.2</liquibase.version>
		<openapi.input-path>src/main/resources/api</openapi.input-path>

		<sonar.coverage.exclusions>**/*Exception*,**/ErrorsEnum*,**/*Entity*,**/*Mapper*,**/processor/*,**/*Config*,**/*Aspect*,**/*W2mApplication*
		</sonar.coverage.exclusions>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- Import dependency management from Spring Boot -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- JACKSON -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<!-- SPOCK -->
			<dependency>
				<groupId>org.apache.groovy</groupId>
				<artifactId>groovy-all</artifactId>
				<version>${groovy-all.version}</version>
				<scope>test</scope>
				<type>pom</type>
			</dependency>

			<dependency>
				<groupId>org.spockframework</groupId>
				<artifactId>spock-bom</artifactId>
				<version>${spock.version}</version>
				<scope>test</scope>
				<type>pom</type>
			</dependency>

			<dependency>
				<groupId>org.spockframework</groupId>
				<artifactId>spock-core</artifactId>
				<version>${spock.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.spockframework</groupId>
				<artifactId>spock-spring</artifactId>
				<version>${spock.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- Embedded Database -->
			<dependency>
				<groupId>io.zonky.test</groupId>
				<artifactId>embedded-database-spring-test</artifactId>
				<version>${embedded-database-spring-test.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>io.zonky.test</groupId>
				<artifactId>embedded-postgres</artifactId>
				<version>${embedded-postgres.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- PODAM -->
			<dependency>
				<groupId>uk.co.jemos.podam</groupId>
				<artifactId>podam</artifactId>
				<version>${podam.version}</version>
				<scope>test</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<dependencies>

		<!-- Spring Boot Dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<version>3.1.4</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<version>3.1.4</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<version>3.1.4</version>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<version>3.1.4</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
			<version>3.1.4</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>3.1.4</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
			<version>3.1.4</version>
		</dependency>

		<dependency>
			<groupId>org.redisson</groupId>
			<artifactId>redisson-spring-boot-starter</artifactId>
			<version>3.17.7</version>
		</dependency>

		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>0.11.2</version>
		</dependency>

		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>0.11.2</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<version>0.11.2</version>
			<scope>runtime</scope>
		</dependency>


		<!-- LOMBOK -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- MAPSTRUCT -->
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>

		<dependency>
			<groupId>jakarta.validation</groupId>
			<artifactId>jakarta.validation-api</artifactId>
			<version>${jakarta.validation-api.version}</version>
		</dependency>

		<!-- Documentation -->

		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>jackson-databind-nullable</artifactId>
			<version>${jackson-databind-nullable.version}</version>
		</dependency>

		<!-- SWAGGER -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>${springdoc-openapi-starter-webmvc-ui.version}</version>
		</dependency>

		<!-- Added to fix vulnerability in gitflow-maven-plugin -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Added to fix vulnerability -->
		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
			<version>${snakeyaml.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-core</artifactId>
			<version>${maven-core.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Database dependencies -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
		</dependency>

		<dependency>
			<groupId>jakarta.persistence</groupId>
			<artifactId>jakarta.persistence-api</artifactId>
			<version>${jakarta.persistence-api.version}</version>
		</dependency>

		<!-- Liquibase -->
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
			<version>${liquibase.version}</version>
		</dependency>

		<!-- Utilities dependencies -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-json</artifactId>
			<version>3.1.4</version>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<version>3.1.4</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.groovy</groupId>
			<artifactId>groovy-all</artifactId>
			<scope>test</scope>
			<type>pom</type>
		</dependency>

		<dependency>
			<groupId>org.spockframework</groupId>
			<artifactId>spock-bom</artifactId>
			<scope>test</scope>
			<type>pom</type>
		</dependency>

		<dependency>
			<groupId>org.spockframework</groupId>
			<artifactId>spock-core</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.spockframework</groupId>
			<artifactId>spock-spring</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>uk.co.jemos.podam</groupId>
			<artifactId>podam</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.zonky.test</groupId>
			<artifactId>embedded-database-spring-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.zonky.test</groupId>
			<artifactId>embedded-postgres</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>


	<build>
		<pluginManagement>
			<plugins>
				<!-- Gmaven plugin -->
				<plugin>
					<groupId>org.codehaus.gmavenplus</groupId>
					<artifactId>gmavenplus-plugin</artifactId>
					<version>${gmavenplus-plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>addTestSources</goal>
								<goal>compileTests</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Custom Clean plugin-->
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
					<executions>
						<execution>
							<id>auto-clean</id>
							<phase>clean</phase>
							<goals>
								<goal>clean</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Compiler -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.ow2.asm</groupId>
							<artifactId>asm</artifactId>
							<version>${asm.version}</version>
						</dependency>
					</dependencies>
					<configuration>
						<annotationProcessorPaths>
							<path>
								<groupId>org.projectlombok</groupId>
								<artifactId>lombok</artifactId>
								<version>${lombok.version}</version>
							</path>
							<path>
								<groupId>org.mapstruct</groupId>
								<artifactId>mapstruct-processor</artifactId>
								<version>${mapstruct.version}</version>
							</path>
						</annotationProcessorPaths>
					</configuration>
				</plugin>

				<!-- Checkstyle validation -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven-checkstyle-plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>com.puppycrawl.tools</groupId>
							<artifactId>checkstyle</artifactId>
							<version>${puppycrawl.tools.version}</version>
						</dependency>
					</dependencies>
					<executions>
						<execution>
							<id>validate</id>
							<phase>validate</phase>
							<configuration>
								<configLocation>checkstyle.xml</configLocation>
								<inputEncoding>UTF-8</inputEncoding>
								<consoleOutput>true</consoleOutput>
								<failsOnError>true</failsOnError>
							</configuration>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Code Coverage -->
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>prepare-agent-unit-test</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<propertyName>surefireArgLine</propertyName>
							</configuration>
						</execution>
						<execution>
							<id>report-unit-test</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>report</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.reporting.outputDirectory}/jacoco-unit-test</outputDirectory>
							</configuration>
						</execution>
						<execution>
							<id>report-integration-test</id>
							<phase>verify</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Includes Spock tests -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.ow2.asm</groupId>
							<artifactId>asm</artifactId>
							<version>${asm.version}</version>
						</dependency>
					</dependencies>
					<configuration>
						<!--suppress UnresolvedMavenProperty -->
						<argLine>${surefireArgLine}</argLine>
						<forkCount>0</forkCount>
						<useFile>false</useFile>
						<useModulePath>false</useModulePath>
						<shutdown>kill</shutdown>
						<includes>
							<include>**/*Test*</include>
							<include>**/*Spec*</include>
						</includes>
					</configuration>
				</plugin>

				<plugin>
					<groupId>pl.project13.maven</groupId>
					<artifactId>git-commit-id-plugin</artifactId>
					<version>${git-commit-id-plugin.version}</version>
					<configuration>
						<failOnNoGitDirectory>false</failOnNoGitDirectory>
					</configuration>
				</plugin>

				<!-- Allows the use of "@" in application.yaml -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
					<configuration>
						<delimiters>
							<delimiter>@</delimiter>
						</delimiters>
						<useDefaultDelimiters>false</useDefaultDelimiters>
					</configuration>
					<executions>
						<execution>
							<phase>compile</phase>
							<goals>
								<goal>resources</goal>
								<goal>testResources</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Documentation plugins -->
				<plugin>
					<groupId>org.openapitools</groupId>
					<artifactId>openapi-generator-maven-plugin</artifactId>
					<version>${openapi-generator-maven-plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>generate</goal>
							</goals>
							<configuration>
								<inputSpec>${openapi.input-path}/open-api.yaml</inputSpec>
								<generatorName>spring</generatorName>
								<modelPackage>${project.groupId}.${project.artifactId}.infrastructure.rest.spring.dto</modelPackage>
								<apiPackage>${project.groupId}.${project.artifactId}.infrastructure.rest.spring.spec</apiPackage>
								<modelNameSuffix>Dto</modelNameSuffix>
								<generateApiDocumentation>false</generateApiDocumentation>
								<generateModelDocumentation>false</generateModelDocumentation>
								<configOptions>
									<sourceFolder>src/main/java</sourceFolder>
									<useSpringBoot3>true</useSpringBoot3>
									<useJakartaEe>true</useJakartaEe>
									<interfaceOnly>true</interfaceOnly>
									<useTags>true</useTags>
								</configOptions>
							</configuration>
						</execution>
						<execution>
							<id>docs</id>
							<goals>
								<goal>generate</goal>
							</goals>
							<configuration>
								<inputSpec>${openapi.input-path}/open-api.yaml</inputSpec>
								<generatorName>asciidoc</generatorName>
								<output>${project.basedir}/docs/openapi</output>
								<configOptions>
									<useIntroduction>true</useIntroduction>
								</configOptions>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<!-- Package as an executable jar -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<!-- Generate build information when the project was built -->
							<goal>build-info</goal>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<version>${flatten-maven-plugin.version}</version>
				<configuration>
					<flattenedPomFilename>pom.xml</flattenedPomFilename>
					<outputDirectory>${project.basedir}/target</outputDirectory>
					<flattenMode>bom</flattenMode>
					<pomElements>
						<parent>keep</parent>
						<pluginManagement>keep</pluginManagement>
					</pomElements>
					<updatePomFile>true</updatePomFile>
				</configuration>
				<executions>
					<execution>
						<id>flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
					</execution>
					<execution>
						<id>flatten.clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Override configuration to avoid HTML generation -->
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>${asciidoctor-maven-plugin.version}</version>
			</plugin>

			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>${maven-clean-plugin.version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.codehaus.gmavenplus</groupId>
				<artifactId>gmavenplus-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<configuration>
					<includes>
						<include>com/knowmod/**/*</include>
					</includes>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<forkCount>1</forkCount>
					<argLine>-Xmx1024m</argLine>
					<argLine>${surefireArgLine}</argLine>
				</configuration>
			</plugin>

			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>${git-commit-id-plugin.version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<version>${openapi-generator-maven-plugin.version}</version>
			</plugin>
		</plugins>

		<resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<testResources>
			<testResource>
				<directory>${basedir}/src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>

	</build>

</project>
